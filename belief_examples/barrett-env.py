from openravepy import *
import numpy as np

env = Environment()
env.Load('../data/barrett.env.xml')
env.SetViewer('qtcoin')
robot = env.GetRobots()[0]

# close fingers
robot.SetDOFValues([1.3,1.3,1.3,0.5],[7,8,9,10])

dofval = robot.GetDOFValues()
print(dofval)

# only plan for arm
manip = robot.SetActiveManipulator('arm')
robot.SetActiveDOFs(manip.GetArmIndices()) 

ikmodel=databases.inversekinematics.InverseKinematicsModel(robot,iktype=IkParameterization.Type.Transform6D)
if not ikmodel.load():
    ikmodel.autogenerate()
    print('IKModel autogenerated')

# setup start position
# 0.6, -0.4, 0.75

Thb = robot.GetLink("handbase").GetTransform()
print(Thb)

qarray = misc.SpaceSamplerExtra().sampleSO3()
for i in np.random.permutation(len(qarray))[0:min(25,len(qarray))]:
	Tstart = np.array([[0,0,1,0.4],[0,1,0,-0.4],[-1,0,0,0.6],[0,0,0,1]])
	Tstart[:3,:3] = rotationMatrixFromQuat(qarray[i]);
	sol = manip.FindIKSolution(Tstart, IkFilterOptions.CheckEnvCollisions)
	print(sol)

	if sol is not None:
		robot.SetDOFValues(sol,manip.GetArmIndices())
		Tee = manip.GetEndEffectorTransform()
		print(Tee)

		Tgoal = numpy.array([[0,0,1,0.6],[0,1,0,0.4],[-1,0,0,0.6],[0,0,0,1]])
		manipprob = interfaces.BaseManipulation(robot)
		res = manipprob.MoveToHandPosition(matrices=[Tgoal],seedik=10)

		robot.WaitForController(0) # wait
		raw_input('Hit ENTER to continue.')	

env.Destroy()
